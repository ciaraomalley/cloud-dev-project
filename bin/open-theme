#!/usr/bin/env ruby

# Use: $ bin/open-theme account/shared/box
# This command points to the actual file being referenced.

# When partials that begin with "account/shared", etc. are rendered,
# the strings are resolved to use partials under the project's current theme's
# file hierarchy. This means that something like `render 'account/shared/box'`
# is actually pointing to a file named "app/views/themes/light/_box.html.erb".
# This command will find the appropriate file and open it.

require 'fileutils'
require 'colorize'

require_relative '../app/helpers/theme_helper.rb'
require_relative '../lib/theme_partials.rb'
include ThemeHelper
include ThemePartials

puts "Your current theme: #{current_theme}"

literal_partial_path = convert_to_literal_partial(ARGV[0])
resolved_partial = nil

THEME_DIRECTORY_ORDER.each do |theme|
  INCLUDE_TARGETS.each do |include_target|
    next unless literal_partial_path.match(/^#{include_target}/)

    partial_without_hierarchy_base = remove_hierarchy_base(literal_partial_path, include_target)

    # shared/fields are framework-agnostic, so we always pull them from the base directory.
    if literal_partial_path.match(/^shared\/fields/)
      resolved_partial = get_full_debased_file_path(partial_without_hierarchy_base, "base")
    else
      resolved_partial = get_full_debased_file_path(partial_without_hierarchy_base, theme)
    end

    if File.exists?(resolved_partial)
      puts "#{ARGV[0]} resolves to " + "#{resolved_partial}.".green
      begin
        exec "open #{resolved_partial}"
      rescue Errno::ENOENT => _
        puts "Could not open file.".red
      end
      break
    end
  end
  break if !resolved_partial.nil? && File.exists?(resolved_partial)
end

if resolved_partial.nil? || !File.exists?(resolved_partial)
  puts "Sorry, we couldn't find the partial which corresponds to `#{ARGV[0]}`.".red
  puts "Please check the path you are trying to resolve and try again.".red
  puts ""
  puts "Hint: Does the file already exist in the directory you're trying to resolve?"
  puts "Check the path and see if it's already being rendered directly from the partial in question."
end
